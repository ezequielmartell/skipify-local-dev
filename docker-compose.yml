services:

  db:
    image: postgres:17.4
    container_name: "skipify-postgres"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}

  sqs:
    container_name: "skipify-sqs"
    image: softwaremill/elasticmq-native
    ports:
      - 9324:9324
      - 9325:9325

  # celery:
  #   build: ../skipify-django-backend/
  #   container_name: "skipify-celery"
  #   command: celery -A django_aws worker --loglevel=INFO -B
  #   volumes:
  #     - .:/code
  #   env_file:
  #     - ./.env
  #     # - ../skipify-django-backend/.env
  #   depends_on:
  #     - db
  #     - sqs
  #     - backend

  # frontend:
  #   build: ../skipify-react-router/
  #   container_name: "skipify-frontend"
  #   command: nginx -g 'daemon off;'
  #   ports:
  #     - 3000:80

  # backend:
  #   build: ../skipify-django-backend/
  #   container_name: "skipify-backend"
  #   command: gunicorn django_aws.wsgi:application --bind 0.0.0.0:8000
  #   # volumes:
  #   #   - .:/code
  #   env_file:
  #     - ./.env
  #     # - ../skipify-django-backend/.env
  #   ports:
  #     - 8000:8000
  #   depends_on:
  #     - db
  #     - sqs
  
  traefik:
      image: "traefik:v3.0"
      container_name: "skipify-traefik"
      restart: "unless-stopped"
      ports:
        - "80:80"
        - "443:443"
        - "8080:8080"
      network_mode: "host"
      volumes:
        - "./config:/config"
        - "./config/traefik.yml:/etc/traefik/traefik.yml"  # Mount the traefik.yml file
        - "./letsencrypt:/letsencrypt"
        - "/var/run/docker.sock:/var/run/docker.sock:ro"